import { useEffect, useState } from "react";
import "./InputBox.css";

const InputBox = ({ onImagesUploaded }) => {
  const [images, setImages] = useState([]);
  const [isUploading, setIsUploading] = useState(false);

  useEffect(() => {
    return () => {
      images.forEach((url) => URL.revokeObjectURL(url));
    };
  }, [images]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
  const handleFileChange = (e) => {
    const files = Array.from(e.target.files);
    const imageUrls = files.map((file) => URL.createObjectURL(file));
    setImages((prev) => [...prev, ...imageUrls]);

    // –ü–µ—Ä–µ–¥–∞—ë–º –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    onImagesUploaded(imageUrls); // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É —Å—Ç—Ä–æ–∫—É

    e.target.value = null;
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –±—ç–∫–µ–Ω–¥
  const uploadToBackend = async () => {
    if (images.length === 0) return;

    setIsUploading(true);
    const formData = new FormData();

    images.forEach((url, index) => {
      fetch(url)
        .then((res) => res.blob())
        .then((blob) => {
          formData.append("images", blob, `image-${index}.jpg`);
        });
    });

    try {
      const response = await fetch("https://your-backend-api/upload", {
        method: "POST",
        body: formData,
      });
      console.log("–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:", await response.json());
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
    } finally {
      setIsUploading(false);
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const removeImage = (index) => {
    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º URL –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    URL.revokeObjectURL(images[index]);
    setImages((prev) => prev.filter((_, i) => i !== index));
  };

  return (
    <div className="image-uploader">
      <input
        type="file"
        id="multi-upload"
        multiple
        accept="image/*"
        onChange={handleFileChange}
        className="visually-hidden"
      />

      {/* –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞-–ª–µ–π–±–ª */}
      <label htmlFor="multi-upload" className="custom-upload-button">
        <span className="upload-icon">üìÅ</span>
        <span className="upload-text">#–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
      </label>
    </div>
  );
};

export default InputBox;
