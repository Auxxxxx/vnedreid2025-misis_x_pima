#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_message() {
    echo -e "${BLUE}üöÄ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_message "Building Prediction Service..."
echo "================================="

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã
PREDICTION_SERVICE_IMAGE="auxxxxx/vnedreid2025-prediction_service:latest"

echo "üìå Image tag: $PREDICTION_SERVICE_IMAGE"

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª
echo "PREDICTION_SERVICE_IMAGE=\"$PREDICTION_SERVICE_IMAGE\"" > .env
echo "CONTEXT_PATH=\"/prediction\"" >> .env

# ML API Configuration
echo "ML_API_HOST=109.73.196.162" >> .env
echo "ML_API_PORT=80" >> .env
echo "ML_API_ENDPOINT=/model/damage-detection/analyze" >> .env
echo "ML_API_TIMEOUT=30000" >> .env

print_success "Environment variable set locally: PREDICTION_SERVICE_IMAGE=$PREDICTION_SERVICE_IMAGE"
print_success "Context path set locally: CONTEXT_PATH=/prediction"
print_success "ML API configuration set locally"

print_message "Building JAR file..."
mvn clean package -DskipTests

print_message "Building Docker image: $PREDICTION_SERVICE_IMAGE"
docker build -t $PREDICTION_SERVICE_IMAGE .

print_success "Docker image built successfully: $PREDICTION_SERVICE_IMAGE"

print_message "Stopping existing containers..."
docker compose down

print_message "Starting services with Docker Compose..."
docker compose up -d

print_success "SUCCESS! Prediction Service is running!"
echo "=================================="
echo -e "${GREEN}üåê Service URL: http://localhost:8080/prediction${NC}"
echo -e "${GREEN}üìä Health check: http://localhost:8080/prediction/actuator/health${NC}"
echo -e "${GREEN}üîç API docs: http://localhost:8080/prediction/swagger-ui.html${NC}"
echo -e "${GREEN}üì° Ping endpoint: http://localhost:8080/prediction/api/ping${NC}"
echo ""
echo -e "${BLUE}üìã Useful commands:${NC}"
echo "  - View logs: docker compose logs -f"
echo "  - Stop service: docker compose down"
echo "  - Restart: docker compose restart" 